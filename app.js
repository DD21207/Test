var express = require('express');var path = require('path');var favicon = require('serve-favicon');var logger = require('morgan');var cookieParser = require('cookie-parser');var bodyParser = require('body-parser');var settings = require('./settings');var session = require('express-session');var MongoStore =require('connect-mongo')(session);var flash = require('connect-flash');var routes = require('./routes/index');// var users = require('./routes/users');var app = express();app.set('port',process.env.PORT || 3000);// view engine setupapp.set('views', path.join(__dirname, 'views'));app.set('view engine', 'ejs');app.use(flash());// uncomment after placing your favicon in /public//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));app.use(logger('dev'));app.use(bodyParser.json());app.use(bodyParser.urlencoded({ extended: true }));app.use(cookieParser());app.use(express.static('./web'))app.use(session({  secret:'love',  key:settings.db,  resave: true,    saveUninitialized: true,    cookie:{maxAge:1000 * 60 * 60 * 24 * 30},  store:new MongoStore({    url:'mongodb://localhost/blog',    db:settings.db,    host:settings.host,    port:settings.port  })}));// app.use('/', index);// app.use('/users', users);routes(app);app.listen(app.get('port'),function(){	console.log('Express sever listening on port' + app.get('port'));})// catch 404 and forward to error handlerapp.use(function(req, res, next) {  var err = new Error('Not Found');  err.status = 404;  next(err);});// error handlerapp.use(function(err, req, res, next) {  // set locals, only providing error in development  res.locals.message = err.message;  res.locals.error = req.app.get('env') === 'development' ? err : {};  // render the error page  res.status(err.status || 500);  res.render('error');});module.exports = app;